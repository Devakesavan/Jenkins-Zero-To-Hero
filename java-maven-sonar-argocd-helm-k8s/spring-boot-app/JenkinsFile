pipeline {
    agent any
    
    stages {
        stage('Checkout Code') {
            steps {
                git branch: 'main', url: 'https://github.com/Devakesavan/Jenkins-Zero-To-Hero.git'
            }
        }
        
        stage('Debug - List Files') {
            steps {
                // List all files in workspace
                sh 'ls -la'
                
                // List files in the project directory
                sh 'ls -la java-maven-sonar-argocd-helm-k8s/'
                
                // List files in spring-boot-app directory
                sh 'ls -la java-maven-sonar-argocd-helm-k8s/spring-boot-app/'
                
                // Check if build.sh exists and its permissions
                sh 'find . -name "build.sh" -type f'
                sh 'find . -name "test.sh" -type f'
            }
        }
        
        stage('Build Project') {
            steps {
                dir('java-maven-sonar-argocd-helm-k8s/spring-boot-app') {
                    // Check current directory
                    sh 'pwd'
                    sh 'ls -la'
                    
                    // Try to make executable and run
                    script {
                        if (fileExists('build.sh')) {
                            sh 'chmod +x build.sh'
                            sh './build.sh'
                        } else {
                            echo 'build.sh not found, using Maven directly'
                            sh 'mvn clean compile'
                        }
                    }
                }
            }
        }
        
        stage('Run Tests') {
            steps {
                dir('java-maven-sonar-argocd-helm-k8s/spring-boot-app') {
                    script {
                        if (fileExists('test.sh')) {
                            sh 'chmod +x test.sh'
                            sh './test.sh'
                        } else {
                            echo 'test.sh not found, using Maven directly'
                            sh 'mvn test'
                        }
                    }
                }
            }
        }
    }
    
    post {
        always {
            archiveArtifacts artifacts: '**/*.log', allowEmptyArchive: true
        }
        success {
            echo 'Build succeeded!'
        }
        failure {
            echo 'Build failed!'
        }
    }
}
